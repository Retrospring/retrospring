.card
  .card-body
    %h1= t(".heading")
    %p.lead= t(".lead")
    = t(".body_html")

    - if current_user.theme
      .pull-right
        = link_to t(".delete"), settings_theme_path, data: { turbo_confirm: t("voc.confirm"), turbo_method: :delete }, tabindex: -1, class: "btn btn-danger"
= bootstrap_form_for(current_user.theme || Theme.new,
  html: { id: "update" },
  method: :patch,
  data: { turbo: false, controller: "theme", action: "theme#submit" }) do |f|
  .card
    .card-body
      %h2= t(".general.heading")
      %p= t(".general.body")

      .row
        = render "settings/theme/input", f:, field_name: :background_color, default: 0xF0EDF4
        = render "settings/theme/input", f:, field_name: :body_text, default: 0x000000
  .card
    .card-body
      %h2= t(".raised.heading")
      %p= t(".raised.body")

      .row
        = render "settings/theme/input", f:, field_name: :raised_background, default: 0xFFFFFF
        = render "settings/theme/input", f:, field_name: :raised_text, default: 0x000000
      .row
        = render "settings/theme/input", f:, field_name: :raised_accent, default: 0xF7F7F7
        = render "settings/theme/input", f:, field_name: :raised_accent_text, default: 0x000000
    .card-footer
      %p= t(".raised.accent.example")
  .card
    .card-body
      %h2= t(".colors.heading")
      %p= t(".colors.body")

      .row
        = render "settings/theme/input", f:, field_name: :primary_color, default: 0x5E35B1
        = render "settings/theme/input", f:, field_name: :primary_text, default: 0xFFFFFF
        .col-sm-12
          .alert.alert-primary= t(".colors.alert.example", type: t(".colors.alert.type.primary"))
      .row
        = render "settings/theme/input", f:, field_name: :danger_color, default: 0xDC3545
        = render "settings/theme/input", f:, field_name: :danger_text, default: 0xFFFFFF
        .col-sm-12
          .alert.alert-danger= t(".colors.alert.example", type: t(".colors.alert.type.danger"))
      .row
        = render "settings/theme/input", f:, field_name: :warning_color, default: 0xFFC107
        = render "settings/theme/input", f:, field_name: :warning_text, default: 0x292929
        .col-sm-12
          .alert.alert-warning= t(".colors.alert.example", type: t(".colors.alert.type.warning"))
      .row
        = render "settings/theme/input", f:, field_name: :info_color, default: 0x17A2B8
        = render "settings/theme/input", f:, field_name: :info_text, default: 0xFFFFFF
        .col-sm-12
          .alert.alert-info= t(".colors.alert.example", type: t(".colors.alert.type.info"))
      .row
        = render "settings/theme/input", f:, field_name: :success_color, default: 0x28A745
        = render "settings/theme/input", f:, field_name: :success_text, default: 0xFFFFFF
        .col-sm-12
          .alert.alert-success= t(".colors.alert.example", type: t(".colors.alert.type.success"))
      .row
        = render "settings/theme/input", f:, field_name: :dark_color, default: 0x343A40
        = render "settings/theme/input", f:, field_name: :dark_text, default: 0xFFFFFF
        .col-sm-12
          %a.btn.btn-dark.mb-3{ href: "#" }= t(".colors.button.example", type: t(".colors.button.type.dark"))
      .row
        = render "settings/theme/input", f:, field_name: :light_color, default: 0xF8F9FA
        = render "settings/theme/input", f:, field_name: :light_text, default: 0xFFFFFF
        .col-sm-12
          %a.btn.btn-light.mb-3{ href: "#" }= t(".colors.button.example", type: t(".colors.button.type.light"))
      .row
        = render "settings/theme/input", f:, field_name: :muted_text, default: 0x6C757D
        .col-sm-6
          %p.pt-4.text-muted= t(".colors.text.example")
  .card
    .card-body
      %h2= t(".forms.heading")
      %p= t(".forms.body")

      .row
        = render "settings/theme/input", f:, field_name: :input_color, default: 0xFFFFFF
        = render "settings/theme/input", f:, field_name: :input_text, default: 0x000000

      .row
        = render "settings/theme/input", f:, field_name: :input_placeholder, default: 0x6C757D
        .col-sm-6
          .form-group
            %label.form-label Example Input
            %input.form-control{ placeholder: "A test placeholder" }
  .card
    .card-body
      .pull-left
        = f.primary

- provide(:title, generate_title(t(".title")))
- parent_layout "user/settings"
